<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<context:component-scan base-package="com.yxk" />



	<!-- 配置数据源 -->
	<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		 destroy-method="close">
		 <property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/demo_web" />
		<property name="username" value="root" />
		<property name="password" value="Mr.Wan0913" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
	</bean>
	
	 <!-- mybatis related... start -->  
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <!-- 这里支持多种寻址方式：classpath和file -->   
                <value>classpath:redis.properties</value>  
                <!-- 推荐使用file的方式引入，这样可以将配置和代码分离 -->  
            </list>  
        </property>  
    </bean>  

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:config/mappers/**/*.xml" />
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yxk.dao" />
	</bean>
	
	 <!-- redis  config  start -->  
    <!-- 配置JedisPoolConfig实例 -->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxActive}" />  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
      
    <!-- 配置JedisConnectionFactory -->  
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="hostName" value="${redis.host}"/>  
        <property name="port" value="${redis.port}"/>  
        <property name="password" value="${redis.pass}"/>  
        <property name="poolConfig" ref="poolConfig"/>  
    </bean>  
      
    <!-- 配置RedisTemplate -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory"/>  
          <property name="keySerializer">   
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />   
        </property>      
        <property name="valueSerializer">   
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />   
        </property>   
        <property name="hashKeySerializer">     
           <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>     
        </property>   
        <property name="hashValueSerializer">   
           <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>     
        </property> 
        
    </bean>  
      
    <!-- 配置RedisCacheManager -->  
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
         <constructor-arg name="redisOperations" ref="redisTemplate" />  
        <property name="defaultExpiration" value="${redis.expiration}"/>  
    </bean>  
      
    <!-- 配置RedisCacheConfig -->  
    <bean id="redisCacheConfig" class="com.yxk.redis.RedisCacheConfig">  
        <constructor-arg ref="jedisConnectionFactory" />  
        <constructor-arg ref="redisTemplate" />  
        <constructor-arg ref="redisCacheManager" />  
    </bean>  
      
    <!-- redis  config  end -->  
</beans>
